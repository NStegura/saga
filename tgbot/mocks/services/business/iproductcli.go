// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/business/iproductcli.go

// Package mock_business is a generated GoMock package.
package mock_business

import (
	context "context"
	reflect "reflect"

	products "github.com/NStegura/saga/tgbot/internal/clients/products"
	gomock "github.com/golang/mock/gomock"
)

// MockIProductCli is a mock of IProductCli interface.
type MockIProductCli struct {
	ctrl     *gomock.Controller
	recorder *MockIProductCliMockRecorder
}

// MockIProductCliMockRecorder is the mock recorder for MockIProductCli.
type MockIProductCliMockRecorder struct {
	mock *MockIProductCli
}

// NewMockIProductCli creates a new mock instance.
func NewMockIProductCli(ctrl *gomock.Controller) *MockIProductCli {
	mock := &MockIProductCli{ctrl: ctrl}
	mock.recorder = &MockIProductCliMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIProductCli) EXPECT() *MockIProductCliMockRecorder {
	return m.recorder
}

// GetProduct mocks base method.
func (m *MockIProductCli) GetProduct(ctx context.Context, articleID int64) (products.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProduct", ctx, articleID)
	ret0, _ := ret[0].(products.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProduct indicates an expected call of GetProduct.
func (mr *MockIProductCliMockRecorder) GetProduct(ctx, articleID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProduct", reflect.TypeOf((*MockIProductCli)(nil).GetProduct), ctx, articleID)
}

// GetProducts mocks base method.
func (m *MockIProductCli) GetProducts(ctx context.Context) ([]products.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProducts", ctx)
	ret0, _ := ret[0].([]products.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProducts indicates an expected call of GetProducts.
func (mr *MockIProductCliMockRecorder) GetProducts(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProducts", reflect.TypeOf((*MockIProductCli)(nil).GetProducts), ctx)
}
