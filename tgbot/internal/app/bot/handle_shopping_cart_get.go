package bot

import (
	"fmt"
	tele "gopkg.in/telebot.v4"
	"strings"
)

func (b *TgBot) handleGetShoppingCart() tele.HandlerFunc {
	return func(ctx tele.Context) error {
		userState, err := b.cache.Get(b.ctx, ctx.Chat().ID)
		if err != nil {
			return fmt.Errorf("failed to get user state: %w", err)
		}

		if len(userState.ShopCartSt.Products) == 0 {
			return ctx.Send(
				"–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, –¥–ª—è –µ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è:\n" +
					"1. –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã /products \n" +
					"2. –î–æ–±–∞–≤—å—Ç–µ –≤ –∫–æ—Ä–∑–∏–Ω—É /add_to_shopping_cart\n",
			)
		}

		var sb strings.Builder
		sb.WriteString("–ö–æ—Ä–∑–∏–Ω–∞ —Ç–æ–≤–∞—Ä–æ–≤:\n\n")
		for articleID, shProduct := range userState.ShopCartSt.Products {
			product, err := b.business.GetProduct(b.ctx, articleID)
			if err != nil {
				return fmt.Errorf("failed to get product: %w", err)
			}
			sb.WriteString(fmt.Sprintf(
				"üõí *%s* (–ö–∞—Ç–µ–≥–æ—Ä–∏—è: %s)\n"+
					"üìù –û–ø–∏—Å–∞–Ω–∏–µ: %s\n"+
					"üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: %d\n"+
					"üîñ –ê—Ä—Ç–∏–∫—É–ª: %d\n\n",
				product.Name, product.Category, product.Description, shProduct.Count, product.ArticleID,
			))
		}
		sb.WriteString(
			"–î–∞–ª–µ–µ –≤—ã –º–æ–∂–µ—Ç–µ:\n" +
				"\t1. C–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ /create_order\n" +
				"\t2. –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É /clear_shopping_cart\n" +
				"\t3. –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä–æ–≤ /add_to_shopping_cart")

		return ctx.Send(sb.String())
	}
}
